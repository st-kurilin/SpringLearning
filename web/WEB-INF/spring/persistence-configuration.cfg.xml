<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:repo="http://www.springframework.org/schema/data/repository"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/data/repository
       http://www.springframework.org/schema/data/repository/spring-repository.xsd">

    <!--<bean id="propertyPlaceholderConfigurer" class="qcs.reportsworkflow.PropertyUtils">
        <property name="location" value="classpath:/META-INF/dao.xml"/>
    </bean>   -->

    <!-- Instructs Spring to perfrom declarative transaction managemenet on annotated classes -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Drives transactions using local JPA APIs -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider and a simple in-memory data source populated with test data -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceUnitName" value="reportsPersistence"/>
        <property name="jpaVendorAdapter" ref="jpaVendor"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <bean id="jpaVendor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"/>
    </bean>

    <!--database configuration in db_connection.properties-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="/WEB-INF/META-INF/db_connection.properties"/>
    </bean>
    <!-- -->

    <!-- DataSource configuration -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="autoCommitOnClose" value="false"/>
        <property name="minPoolSize" value="5"/>
        <property name="numHelperThreads" value="20"/>
        <property name="initialPoolSize" value="25"/>
        <property name="maxPoolSize" value="250"/>
        <property name="breakAfterAcquireFailure" value="true"/>
        <property name="acquireRetryDelay" value="20"/>
        <property name="maxIdleTimeExcessConnections" value="600"/>
        <property name="maxIdleTime" value="600"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <property name="typeDefinitions">
            <list>
                <bean class="org.springframework.orm.hibernate3.TypeDefinitionBean">
                    <property name="typeName" value="com.domain.customer.EmailAddress"/>
                    <property name="typeClass" value="com.persistence.EmailType"/>
                </bean>
            </list>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.domain.customer.User</value>
                <value>com.domain.shop.Product</value>
                <value>com.domain.commerce.Transaction</value>
            </list>
        </property>
    </bean>

    <jpa:repositories base-package="com.domain" >
        <!--<repo:include-filter type="assignable" expression="org.springframework.data.repository.Repository"/>
        <repo:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
    </jpa:repositories>
    <bean class="com.persistence.AvatarRepositoryInMemoryImpl"/>

</beans>